${ship.render_debug_info()}

// graphics
<tal:build_graphics define="states python:{'not_moving': 0 ,'moving': 600};
                            x_y_crops python:('28, 89', '113, 66', '138, 48', '113, 66')"
                    repeat="state states">
    <tal:build_state define="y_start python:states[state]">
        spriteset(${ship.id}_ss_not_loaded_${state}, "src/graphics/${ship.id}_0.png") {
            [20,  ${y_start + 10}, ${x_y_crops[0]},  -13,  -6]
            [60,  ${y_start + 10}, ${x_y_crops[1]}, -124,   5]
            [186, ${y_start + 10}, ${x_y_crops[2]}, -124, -28]
            [328, ${y_start + 10}, ${x_y_crops[3]},  -76, -37]
            [454, ${y_start + 10}, ${x_y_crops[0]},  -14, -76]
            [494, ${y_start + 10}, ${x_y_crops[1]},  -34, -38]
            [620, ${y_start + 10}, ${x_y_crops[2]},  -15, -28]
            [762, ${y_start + 10}, ${x_y_crops[3]},   15,   6]
        }
        spriteset(${ship.id}_ss_load_1_${state}, "src/graphics/${ship.id}_0.png") {
            [20,  ${y_start + 110}, ${x_y_crops[0]},  -13, -14]
            [60,  ${y_start + 110}, ${x_y_crops[1]}, -118,   1]
            [186, ${y_start + 110}, ${x_y_crops[2]}, -112, -28]
            [328, ${y_start + 110}, ${x_y_crops[3]},  -64, -32]
            [454, ${y_start + 110}, ${x_y_crops[0]},  -14, -65]
            [494, ${y_start + 110}, ${x_y_crops[1]},  -45, -32]
            [620, ${y_start + 110}, ${x_y_crops[2]},  -26, -28]
            [762, ${y_start + 110}, ${x_y_crops[3]},    2,   0]
        }
        spriteset(${ship.id}_ss_load_2_${state}, "src/graphics/${ship.id}_0.png") {
            [20,  ${y_start + 210}, ${x_y_crops[0]},  -13, -21]
            [60,  ${y_start + 210}, ${x_y_crops[1]}, -107,  -4]
            [186, ${y_start + 210}, ${x_y_crops[2]}, -100, -28]
            [328, ${y_start + 210}, ${x_y_crops[3]},  -59, -30]
            [454, ${y_start + 210}, ${x_y_crops[0]},  -14, -57]
            [494, ${y_start + 210}, ${x_y_crops[1]},  -53, -30]
            [620, ${y_start + 210}, ${x_y_crops[2]},  -49, -28]
            [762, ${y_start + 210}, ${x_y_crops[3]},   -4,  -4]
        }
        spriteset(${ship.id}_ss_load_3_${state}, "src/graphics/${ship.id}_0.png") {
            [20,  ${y_start + 310}, ${x_y_crops[0]},  -13, -29]
            [60,  ${y_start + 310}, ${x_y_crops[1]}, -102,  -8]
            [186, ${y_start + 310}, ${x_y_crops[2]},  -84, -28]
            [328, ${y_start + 310}, ${x_y_crops[3]},  -48, -26]
            [454, ${y_start + 310}, ${x_y_crops[0]},  -14, -47]
            [494, ${y_start + 310}, ${x_y_crops[1]},  -60, -25]
            [620, ${y_start + 310}, ${x_y_crops[2]},  -50, -28]
            [762, ${y_start + 310}, ${x_y_crops[3]},   -7,  -6]
        }
        spriteset(${ship.id}_ss_load_4_${state}, "src/graphics/${ship.id}_0.png") {
            [20,  ${y_start + 410}, ${x_y_crops[0]},  -13, -35]
            [60,  ${y_start + 410}, ${x_y_crops[1]},  -97, -10]
            [186, ${y_start + 410}, ${x_y_crops[2]},  -69, -28]
            [328, ${y_start + 410}, ${x_y_crops[3]},  -45, -22]
            [454, ${y_start + 410}, ${x_y_crops[0]},  -14, -45]
            [494, ${y_start + 410}, ${x_y_crops[1]},  -66, -22]
            [620, ${y_start + 410}, ${x_y_crops[2]},  -61, -28]
            [762, ${y_start + 410}, ${x_y_crops[3]},  -15, -10]
        }
        spriteset(${ship.id}_ss_load_5_${state}, "src/graphics/${ship.id}_0.png") {
            [20,  ${y_start + 510}, ${x_y_crops[0]},  -13, -41]
            [60,  ${y_start + 510}, ${x_y_crops[1]},  -90, -13]
            [186, ${y_start + 510}, ${x_y_crops[2]},  -65, -28]
            [328, ${y_start + 510}, ${x_y_crops[3]},  -40, -19]
            [454, ${y_start + 510}, ${x_y_crops[0]},  -14, -42]
            [494, ${y_start + 510}, ${x_y_crops[1]},  -75, -17]
            [620, ${y_start + 510}, ${x_y_crops[2]},  -68, -28]
            [762, ${y_start + 510}, ${x_y_crops[3]},  -22, -13]
        }
    </tal:build_state>
</tal:build_graphics>

spritegroup ${ship.id}_sg_refit_0_moving {
    loaded:  [
        ${ship.id}_ss_not_loaded_moving,
        ${ship.id}_ss_load_1_moving,
    ];
    loading: [ // can't be loading when moving, but we'll overlook that, it's required by nml ;)
        ${ship.id}_ss_not_loaded_moving,
    ];
}

spritegroup ${ship.id}_sg_refit_0_not_moving {
    loaded:  [
        ${ship.id}_ss_not_loaded_not_moving,
        ${ship.id}_ss_load_1_not_moving,
    ];
    loading: [
        ${ship.id}_ss_not_loaded_not_moving,
        ${ship.id}_ss_load_1_not_moving,
    ];
}

switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics_refit_0, current_speed) {
    0: return ${ship.id}_sg_refit_0_not_moving;
    return ${ship.id}_sg_refit_0_moving;
}

spritegroup ${ship.id}_sg_refit_1_moving {
    loaded:  [
        ${ship.id}_ss_not_loaded_moving,
        ${ship.id}_ss_load_1_moving,
        ${ship.id}_ss_load_2_moving,
        ${ship.id}_ss_load_3_moving,
    ];
    loading: [ // can't be loading when moving, but we'll overlook that, it's required by nml ;)
        ${ship.id}_ss_not_loaded_moving,
    ];
}

spritegroup ${ship.id}_sg_refit_1_not_moving {
    loaded:  [
        ${ship.id}_ss_not_loaded_not_moving,
        ${ship.id}_ss_load_1_not_moving,
        ${ship.id}_ss_load_2_not_moving,
        ${ship.id}_ss_load_3_not_moving,
    ];
    loading: [
        ${ship.id}_ss_not_loaded_not_moving,
        ${ship.id}_ss_load_1_not_moving,
        ${ship.id}_ss_load_2_not_moving,
        ${ship.id}_ss_load_3_not_moving,
    ];
}

switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics_refit_1, current_speed) {
    0: return ${ship.id}_sg_refit_1_not_moving;
    return ${ship.id}_sg_refit_1_moving;
}

spritegroup ${ship.id}_sg_refit_2_moving {
    loaded:  [
        ${ship.id}_ss_not_loaded_moving,
        ${ship.id}_ss_load_1_moving,
        ${ship.id}_ss_load_2_moving,
        ${ship.id}_ss_load_3_moving,
        ${ship.id}_ss_load_4_moving,
        ${ship.id}_ss_load_5_moving,
    ];
    loading: [ // can't be loading when moving, but we'll overlook that, it's required by nml ;)
        ${ship.id}_ss_not_loaded_moving,
    ];
}

spritegroup ${ship.id}_sg_refit_2_not_moving {
    loaded:  [
        ${ship.id}_ss_not_loaded_not_moving,
        ${ship.id}_ss_load_1_not_moving,
        ${ship.id}_ss_load_2_not_moving,
        ${ship.id}_ss_load_3_not_moving,
        ${ship.id}_ss_load_4_not_moving,
        ${ship.id}_ss_load_5_not_moving,
    ];
    loading: [
        ${ship.id}_ss_not_loaded_not_moving,
        ${ship.id}_ss_load_1_not_moving,
        ${ship.id}_ss_load_2_not_moving,
        ${ship.id}_ss_load_3_not_moving,
        ${ship.id}_ss_load_4_not_moving,
        ${ship.id}_ss_load_5_not_moving,
    ];
}

switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics_refit_2, current_speed) {
    0: return ${ship.id}_sg_refit_2_not_moving;
    return ${ship.id}_sg_refit_2_moving;
}

switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics, cargo_subtype) {
    0: return ${ship.id}_switch_graphics_refit_0;
    1: return ${ship.id}_switch_graphics_refit_1;
    2: return ${ship.id}_switch_graphics_refit_2;
    return ${ship.id}_switch_graphics_refit_0;
}

spritegroup ${ship.id}_sg_purchase {
    loaded:  [
        ${ship.id}_ss_not_loaded_not_moving,
    ];
    loading: [
        ${ship.id}_ss_not_loaded_not_moving,
    ];
}


// -- set speed a little higher than rated speed when unladen -- //
<tal:speed repeat="speed_factor python:range(3)">
    switch (FEAT_SHIPS, SELF, ${ship.id}_switch_speed_varies_with_load_amount_${speed_factor}, cargo_count*100/cargo_capacity) {
        0 : ${ship.get_speeds_adjusted_for_load_amount(speed_factor)[0]};
        1..100 : ${ship.get_speeds_adjusted_for_load_amount(speed_factor)[4]}; // log tug is binary: loaded or unloaded; no intermediate fractional speeds
        return 0; // should never reach this result, make it show up as a problem
    }
</tal:speed>
switch (FEAT_SHIPS, SELF, ${ship.id}_switch_speed_varies_with_load_amount, param_adjust_ship_speed) {
    0: ${ship.id}_switch_speed_varies_with_load_amount_0;
    1: ${ship.id}_switch_speed_varies_with_load_amount_1;
    2: ${ship.id}_switch_speed_varies_with_load_amount_2;
}
switch (FEAT_SHIPS, SELF, ${ship.id}_switch_purchase_speed, param_adjust_ship_speed) {
    0: ${ship.get_speeds_adjusted_for_load_amount(0)[4]};
    1: ${ship.get_speeds_adjusted_for_load_amount(1)[4]};
    2: ${ship.get_speeds_adjusted_for_load_amount(2)[4]};
}

${ship.render_cargo_capacity()}

${ship.render_properties()}
